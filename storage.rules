rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isValidFileSize(maxSizeMB) {
      return request.resource.size < maxSizeMB * 1024 * 1024;
    }
    
    function isValidFileType(allowedTypes) {
      return request.resource.contentType.matches(allowedTypes);
    }
    
    // User avatars
    match /avatars/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                    request.auth.uid == userId && 
                    isValidFileSize(5) &&
                    isValidFileType('image/.*');
    }
    
    // RFQ attachments
    match /rfqs/{rfqId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                    isValidFileSize(10) &&
                    isValidFileType('(image/.*|application/pdf|application/msword|application/vnd.openxmlformats-officedocument.*)');
      allow delete: if isAdmin();
    }
    
    // Order documents
    match /orders/{orderId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                    isValidFileSize(10);
      allow delete: if isAdmin();
    }
    
    // Company documents
    match /companies/{companyId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                    isValidFileSize(10);
      allow delete: if isAdmin();
    }
  }
}




